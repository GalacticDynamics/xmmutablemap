[project]
name = "xmmutablemap"
authors = [
  { name = "Galactic Dynamics Maintainers", email = "nstarman@users.noreply.github.com" },
]
description = "Immutable Map, compatible with JAX & Equinox"
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "jax",
  "typing_extensions >= 4.8",
]

[project.urls]
Homepage = "https://github.com/GalacticDynamics/xmmutablemap"
"Bug Tracker" = "https://github.com/GalacticDynamics/xmmutablemap/issues"
Discussions = "https://github.com/GalacticDynamics/xmmutablemap/discussions"
Changelog = "https://github.com/GalacticDynamics/xmmutablemap/releases"

[dependency-groups]
dev = [
  "ipykernel>=6.29.5",
  "cz-conventional-gitmoji>=0.6.1",
  "pre-commit>=4.1.0",
  {include-group = "nox"},
  {include-group = "test"},
]
pylint = [
    "pylint>=3.3.8",
]
nox = [
    "nox>=2024.10.9",
]
test = [
  "pytest>=8.3.3",
  "pytest-cov>=3",
  "pytest-github-actions-annotate-failures>=0.2.0",
  "sybil>=8.0.0",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[tool.hatch]
build.hooks.vcs.version-file = "src/xmmutablemap/_version.py"
version.source = "vcs"


[tool.commitizen]
name = "cz_gitmoji"


[tool.pytest.ini_options]
minversion = "8.3"
addopts = [
  "--showlocals",
  "--strict-config",
  "--strict-markers",
  "-p no:doctest",    # using sybil
  "-ra",
]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = ["README.md", "src/", "tests/"]
norecursedirs = [
  ".*",          # ignores .hypothesis, .git, etc.
  "__pycache__"
]


[tool.coverage]
run.source = ["xmmutablemap"]
report.exclude_also = [
  '\.\.\.',
  'if TYPE_CHECKING:',
]


[tool.mypy]
files = ["src"]
python_version = "3.10"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
warn_return_any = true

[[tool.mypy.overrides]]
module = "xmmutablemap.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "jax.*"
ignore_missing_imports = true


[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
  "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
  "COM812",  # <- for ruff.format
  "D203",    # 1 blank line required before class docstring
  "D213",    # Multi-line docstring summary should start at the second line
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.isort]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["ANN201", "D103", "D401", "INP001", "S101", "SLF001", "T20"]
"noxfile.py" = ["T20"]


[tool.pylint]
py-version = "3.10"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "missing-function-docstring",
  "wrong-import-position",
  "arguments-differ",
]
